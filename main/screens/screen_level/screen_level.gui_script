local gui_button = require("riritools.lua.gui_button")
local defold_msgs = require("riritools.lua.defold_msgs")
local rt_urls = require("riritools.lua.riritools_urls")
local rt_msgs = require("riritools.lua.riritools_msgs")
local ss_msgs = require("main.lua.msgs")

function init(self)
	msg.post(".", defold_msgs.ACQUIRE_INPUT_FOCUS)
	self.action_button = gui_button:new("action_button")
	self.action_button:setup({translate=false})

	self.pause_button = gui_button:new("pause_button")
	self.pause_button:setup({translate=false})
	self.pause_button.pressed_function_args = self
	self.pause_button.pressed_function = function(self)
		msg.post(rt_urls.SCREEN_MANAGER, rt_msgs.DISABLE_SCREEN, {screen="screen_level"})
		msg.post(rt_urls.SCREEN_MANAGER, rt_msgs.ENABLE_SCREEN, {screen="screen_pause"})
		msg.post(rt_urls.LEVEL_MANAGER, rt_msgs.PAUSE_LEVEL, {level="level_system_test"})
	end

	self.eat_game = gui_button:new("eat_button")
	self.eat_game:setup({translate=false})

	msg.post(rt_urls.GO_PLAYER, ss_msgs.START_LEVEL)
	msg.post(rt_urls.SCREEN_MANAGER, rt_msgs.PUSH_SCREEN, {screen="screen_pause"})
	msg.post(rt_urls.SCREEN_MANAGER, rt_msgs.DISABLE_SCREEN, {screen="screen_pause"})
end

function final(self)
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
	self.action_button:on_input(action_id, action)
	self.pause_button:on_input(action_id, action)
	self.eat_game:on_input(action_id, action)
end
